#1 特别注意 配置中心的地址一定要放在bootstrap.properties中，这个配置文件是由“根”上下文优先加载，
#可以保证程序启动之初就感知到远程配置中心的存在，并从远程获取配置，随后继续启动系统，这点十分重要。
#2.而application.properties是由子上下文加载，加载顺序低于前者，如果配置中心地址放在这里，并且你
#远程配置了一些启动相关的必要参数，那么，你的程序很可能由于缺少参数而启动失败。
#3.下面这段代码，最关键的是第一行，第二行如果不配置系统默认读取spring.application.name，第三行
#如果不配置，系统默认default，即：${spring.application.name}.properties
#4.我们一般的做法是，在系统启动的时候，用命令行传入--spring.cloud.config.profile=dev|prod|test
#的方式，因为在启动的时候，我们是明确知道我要获取哪套配置的。
#5.bus相关的配置（本例中用的kafka）完全可以放在远程。
spring:
  application:
    name: user # 项目名称尽量用小写 # 对应config所获取的配置文件的{application}
  cloud:
    config:
#      uri: http://config:${config.port:8888}
      profile: dev # 指定profile，对应config所获取的配置文件中的{profile}
      label: master
      discovery:
        enabled: true # 默认false，设为true表示使用注册中心中的configServer配置而不自己配置configServer的uri
        serviceId: config # 指定configServer在服务发现中的serviceId，默认为：configServer
encrypt:
  failOnError: false


# 参考文档：https://github.com/spring-cloud/spring-cloud-config/blob/master/docs/src/main/asciidoc/spring-cloud-config.adoc#discovery-first-bootstrap